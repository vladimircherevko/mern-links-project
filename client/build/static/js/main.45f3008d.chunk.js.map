{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","components/LinkCard.js","pages/DetailPage.js","pages/CreatePage.js","pages/AuthPage.js","hooks/message.hook.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","resp","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","login","logout","token","userId","isAuthenticated","Loader","className","LinksList","links","length","map","link","i","key","_id","from","to","LinksPage","useContext","setLinks","getLinks","Authorization","useEffect","LinkCard","href","target","rel","clicks","Date","date","toLocaleDateString","DetailPage","setLink","linkId","useParams","id","getLink","console","log","CreatePage","auth","history","useHistory","window","M","updateTextFields","pressHandle","event","push","type","name","onChange","e","value","onKeyPress","htmlFor","AuthPage","email","password","form","setForm","text","toast","html","changeHandle","registeryHandle","loginHandle","onClick","disabled","Navbar","auht","preventDefault","App","setToken","setUserId","ready","setReady","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"kQAGaA,EAAU,WAAO,IAAD,EACGC,oBAAS,GADZ,mBACpBC,EADoB,KACXC,EADW,OAEDF,mBAAS,MAFR,mBAEpBG,EAFoB,KAEbC,EAFa,KA0B3B,MAAO,CAAEH,UAASI,QAtBFC,sBAAW,uCACzB,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GACjDT,GAAW,GADb,SAGQQ,IACFA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBALhC,SAOuBG,MAAMP,EAAK,CAAEE,SAAQC,OAAMC,YAPlD,cAOUI,EAPV,iBAQuBA,EAAKC,OAR5B,WAQUC,EARV,OASSF,EAAKG,GATd,uBASwB,IAAIC,MAAMF,EAAKG,SAAW,sBATlD,eAUIlB,GAAW,GAVf,kBAWWe,GAXX,wCAaIf,GAAW,GACXE,EAAS,KAAEgB,SAdf,+DADyB,sDAmBzB,IAGyBjB,QAAOkB,WADff,uBAAY,kBAAMF,EAAS,QAAO,MC1BjDkB,EAAO,aAEAC,EAAcC,wBAAc,CACvCC,MAAOH,EACPI,OAAQJ,EACRK,MAAO,KACPC,OAAQ,KACRC,iBAAiB,ICPNC,EAAS,kBACpB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YAEjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YAEjB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gBCVZC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OAAqB,IAAjBA,EAAMC,OAAqB,uBAAGH,UAAU,UAAb,2DAE7B,+BACE,+BACE,4BACE,iCACA,wGACA,kGACA,4EAIJ,+BACGE,EAAME,KAAI,SAACC,EAAMC,GAAP,OACT,wBAAIC,IAAKF,EAAKG,KACZ,4BAAKF,EAAI,GACT,4BAAKD,EAAKI,MACV,4BAAKJ,EAAKK,IACV,4BACE,kBAAC,IAAD,CAAMA,GAAE,kBAAaL,EAAKG,MAA1B,sDCfDG,EAAY,WAAO,IACtBf,EAAUgB,qBAAWpB,GAArBI,MADqB,EAEH3B,mBAAS,MAFN,mBAEtBiC,EAFsB,KAEfW,EAFe,OAGA7C,IAArBM,EAHqB,EAGrBA,QAASJ,EAHY,EAGZA,QAGX4C,EAAWvC,sBAAW,sBAAC,4BAAAE,EAAA,+EAENH,EAAQ,YAAa,MAAO,KAAM,CACnDyC,cAAc,UAAD,OAAYnB,KAHF,OAEnBV,EAFmB,OAKzB2B,EAAS3B,GALgB,uGAO1B,CAACU,EAAOtB,IAMX,OAJA0C,qBAAU,WACRF,MACC,CAACA,IAEA5C,EAAgB,kBAAC,EAAD,MAEhBgC,EAAc,kBAAC,EAAD,CAAWA,MAAOA,IAC7B,MC5BIe,EAAW,SAAC,GAAD,IAAGZ,EAAH,EAAGA,KAAH,OACtB,oCACE,qEACA,4FAEE,uBAAGa,KAAMb,EAAKK,GAAIS,OAAO,SAASC,IAAI,uBACnCf,EAAKK,KAGV,mEAEE,uBAAGQ,KAAMb,EAAKI,KAAMU,OAAO,SAASC,IAAI,uBACrCf,EAAKI,OAGV,mLAC+B,gCAASJ,EAAKgB,SAE7C,yGACiB,gCAAS,IAAIC,KAAKjB,EAAKkB,MAAMC,yBCbrCC,EAAa,WAAO,IACvB7B,EAAUgB,qBAAWpB,GAArBI,MADsB,EAEN3B,mBAAS,MAFH,mBAEvBoC,EAFuB,KAEjBqB,EAFiB,KAGxBC,EAASC,cAAYC,GAHG,EAID7D,IAArBM,EAJsB,EAItBA,QAASJ,EAJa,EAIbA,QAGX4D,EAAUvD,sBAAW,sBAAC,4BAAAE,EAAA,+EAELH,EAAQ,aAAD,OAAcqD,GAAU,MAAO,KAAM,CAC7DZ,cAAc,UAAD,OAAYnB,KAHH,OAElBV,EAFkB,OAKxBwC,EAAQxC,GALgB,uGAOzB,CAACyC,EAAQ/B,EAAOtB,IAMnB,OAJA0C,qBAAU,WACRc,MACC,CAACA,IAEA5D,EAAgB,kBAAC,EAAD,OACpB6D,QAAQC,IAAI3B,GACRA,EAAa,kBAAC,EAAD,CAAUA,KAAMA,IAC1B,OC1BI4B,EAAa,WAAO,IAAD,EACNhE,mBAAS,IADH,mBACvBoC,EADuB,KACjBqB,EADiB,KAEtBpD,EAAYN,IAAZM,QACF4D,EAAOtB,qBAAWpB,GAClB2C,EAAUC,cAEhBpB,qBAAU,WACRqB,OAAOC,EAAEC,qBACR,IAEH,IAAMC,EAAW,uCAAG,WAAMC,GAAN,eAAAhE,EAAA,yDACA,UAAdgE,EAAMlC,IADQ,0CAGKjC,EACjB,qBACA,OACA,CAAEmC,KAAMJ,GACR,CAAEU,cAAc,UAAD,OAAYmB,EAAKtC,SAPpB,OAGRV,EAHQ,OASdiD,EAAQO,KAAR,kBAAwBxD,EAAKmB,KAAKG,MATpB,yGAAH,sDAcjB,OACE,yBAAKR,UAAU,OACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,2BACE6B,GAAG,OACHc,KAAK,OACL3C,UAAU,GACV4C,KAAK,OACLC,SAAU,SAAAC,GAAC,OAAIpB,EAAQoB,EAAE3B,OAAO4B,QAChCC,WAAYR,EACZO,MAAO1C,IAET,2BAAO4C,QAAQ,QAAf,Y,gBCrCGC,EAAW,WAAO,IAAD,EACJjF,mBAAS,CAAEkF,MAAO,GAAIC,SAAU,KAD5B,mBACrBC,EADqB,KACfC,EADe,KAEtBpB,EAAOtB,qBAAWpB,GAFI,EAGoBxB,IAAxCE,EAHoB,EAGpBA,QAASE,EAHW,EAGXA,MAAOE,EAHI,EAGJA,QAASgB,EAHL,EAGKA,WAC3BD,ECNNd,uBAAY,SAAAgF,GACNlB,OAAOC,GAAKiB,GAAMlB,OAAOC,EAAEkB,MAAM,CAAEC,KAAMF,MAC5C,IDMHvC,qBAAU,WACR3B,EAAQjB,GACRkB,MACC,CAAClB,EAAOkB,EAAYD,IAEvB2B,qBAAU,WACRqB,OAAOC,EAAEC,qBACR,IAEH,IAAMmB,EAAe,SAAAjB,GACnBa,EAAQ,eAAKD,EAAN,eAAaZ,EAAMtB,OAAOyB,KAAOH,EAAMtB,OAAO4B,UAGjDY,EAAe,uCAAG,4BAAAlF,EAAA,+EAEDH,EAAQ,sBAAuB,OAAxB,eAAqC+E,IAF3C,OAEdnE,EAFc,OAGpBG,EAAQH,EAAKG,SAHO,uGAAH,qDAOfuE,EAAW,uCAAG,4BAAAnF,EAAA,+EAEGH,EAAQ,kBAAmB,OAApB,eAAiC+E,IAF3C,OAEVnE,EAFU,OAGhBgD,EAAKxC,MAAMR,EAAKU,MAAOV,EAAKW,QAHZ,uGAAH,qDAOjB,OACE,yBAAKG,UAAU,OACb,yBAAKA,UAAU,oBACb,+GACA,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,cAAhB,sEACA,6BACE,yBAAKA,UAAU,oBACb,2BACE6B,GAAG,QACHc,KAAK,OACL3C,UAAU,aACV4C,KAAK,QACLC,SAAUa,EACVX,MAAOM,EAAKF,QAEd,2BAAOF,QAAQ,SAAf,UAEF,yBAAKjD,UAAU,oBACb,2BACE6B,GAAG,WACHc,KAAK,WACL3C,UAAU,aACV4C,KAAK,WACLC,SAAUa,EACVX,MAAOM,EAAKD,WAEd,2BAAOH,QAAQ,SAAf,eAIN,yBAAKjD,UAAU,eACb,4BACE6D,QAASD,EACTE,SAAU5F,EACV8B,UAAU,4BAHZ,kCAOA,4BACE6D,QAASF,EACTG,SAAU5F,EACV8B,UAAU,iCAHZ,2EE1EC+D,EAAS,WACpB,IAAM5B,EAAUC,cACV4B,EAAOpD,qBAAWpB,GAOxB,OACE,6BACE,yBAAKQ,UAAU,kCACb,0BAAMA,UAAU,cAAhB,qGACA,wBAAIA,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASU,GAAG,WAAZ,WAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,UAAZ,UAEF,4BACE,uBAAGQ,KAAK,IAAI2C,QAlBD,SAAAf,GACnBA,EAAEmB,iBACFD,EAAKrE,SACLwC,EAAQO,KAAK,OAeL,aCKGwB,MApBf,WAAgB,IAAD,ECNQ,WAAO,IAAD,EACDjG,mBAAS,MADR,mBACpB2B,EADoB,KACbuE,EADa,OAEClG,mBAAS,MAFV,mBAEpB4B,EAFoB,KAEZuE,EAFY,OAGDnG,oBAAS,GAHR,mBAGpBoG,EAHoB,KAGbC,EAHa,KAKrB5E,EAAQnB,uBAAY,SAACgG,EAAU1C,GACnCsC,EAASI,GACTH,EAAUvC,GACV2C,aAAaC,QAVG,WAYd5F,KAAKC,UAAU,CAAEc,MAAO2E,EAAU1E,OAAQgC,OAE3C,IAEGlC,EAASpB,uBAAY,WACzB4F,EAAS,MACTC,EAAU,MACVI,aAAaE,WAnBG,cAoBf,IAQH,OANA1D,qBAAU,WACR,IAAM9B,EAAOL,KAAK8F,MAAMH,aAAaI,QAvBrB,aAwBZ1F,GAAQA,EAAKU,OAAOF,EAAMR,EAAKU,MAAOV,EAAKW,QAC/CyE,GAAS,KACR,CAAC5E,IAEG,CAAEA,QAAOC,SAAQC,QAAOC,SAAQwE,SDnBSQ,GAAxCnF,EADK,EACLA,MAAOC,EADF,EACEA,OAAQC,EADV,EACUA,MAAOC,EADjB,EACiBA,OAAQwE,EADzB,EACyBA,MAChCvE,IAAoBF,EAEpBkF,EAAmBhF,EEJrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiF,KAAK,SAASC,OAAK,GACxB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,UAAUC,OAAK,GACzB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUrE,GAAG,aAIjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqE,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUtE,GAAG,OFZjB,OAAK2D,EAGH,kBAAC7E,EAAYyF,SAAb,CACElC,MAAO,CAAErD,QAAOC,SAAQC,QAAOC,SAAQC,oBAEvC,kBAAC,IAAD,KACGA,GAAmB,kBAAC,EAAD,MACpB,yBAAKE,UAAU,aAAa8E,KARf,kBAAC,EAAD,OGJDI,QACW,cAA7B7C,OAAO8C,SAASC,UAEe,UAA7B/C,OAAO8C,SAASC,UAEhB/C,OAAO8C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAActB,MAAMuB,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.45f3008d.chunk.js","sourcesContent":["// создаем пользовательский хук\r\nimport { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setLoading(true);\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers[\"Content-Type\"] = \"application/json\";\r\n        }\r\n        const resp = await fetch(url, { method, body, headers });\r\n        const data = await resp.json();\r\n        if (!resp.ok) throw new Error(data.message || \"Wrong http request\");\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = useCallback(() => setError(null), []);\r\n  return { loading, request, error, clearError };\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nconst noop = () => {};\r\n\r\nexport const AuthContext = createContext({\r\n  login: noop,\r\n  logout: noop,\r\n  token: null,\r\n  userId: null,\r\n  isAuthenticated: false\r\n});\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n  <div className=\"loader\">\r\n    <div className=\"preloader-wrapper active\">\r\n      <div className=\"spinner-layer spinner-red-only\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const LinksList = ({ links }) => {\r\n  if (links.length === 0) return <p className=\"center\">Ссылок нет</p>;\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>N</th>\r\n          <th>Оригинальная</th>\r\n          <th>Сокращенная</th>\r\n          <th>Открыть</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {links.map((link, i) => (\r\n          <tr key={link._id}>\r\n            <td>{i + 1}</td>\r\n            <td>{link.from}</td>\r\n            <td>{link.to}</td>\r\n            <td>\r\n              <Link to={`/detail/${link._id}`}>Открыть</Link>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { useState, useCallback, useContext, useEffect } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { LinksList } from \"../components/LinksList\";\r\n\r\nexport const LinksPage = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const [links, setLinks] = useState(null);\r\n  const { request, loading } = useHttp();\r\n\r\n  // можно определить прямо в useEffect без useCallback\r\n  const getLinks = useCallback(async () => {\r\n    try {\r\n      const data = await request(`/api/link`, \"GET\", null, {\r\n        Authorization: `Bearer ${token}`\r\n      });\r\n      setLinks(data);\r\n    } catch (e) {}\r\n  }, [token, request]);\r\n\r\n  useEffect(() => {\r\n    getLinks();\r\n  }, [getLinks]);\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  if (links) return <LinksList links={links} />;\r\n  return null;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const LinkCard = ({ link }) => (\r\n  <>\r\n    <h2>Ссылка:</h2>\r\n    <p>\r\n      Ваша ссылка:\r\n      <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {link.to}\r\n      </a>\r\n    </p>\r\n    <p>\r\n      Откуда:\r\n      <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {link.from}\r\n      </a>\r\n    </p>\r\n    <p>\r\n      Количество кликов по ссылке: <strong>{link.clicks}</strong>\r\n    </p>\r\n    <p>\r\n      Дата создания: <strong>{new Date(link.date).toLocaleDateString()}</strong>\r\n    </p>\r\n  </>\r\n);\r\n","import React, { useState, useCallback, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { LinkCard } from \"../components/LinkCard\";\r\n\r\nexport const DetailPage = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const [link, setLink] = useState(null);\r\n  const linkId = useParams().id;\r\n  const { request, loading } = useHttp();\r\n\r\n  //getLink можно определить прямо в useEffect без useCallback\r\n  const getLink = useCallback(async () => {\r\n    try {\r\n      const data = await request(`/api/link/${linkId}`, \"GET\", null, {\r\n        Authorization: `Bearer ${token}`\r\n      });\r\n      setLink(data);\r\n    } catch (e) {}\r\n  }, [linkId, token, request]);\r\n\r\n  useEffect(() => {\r\n    getLink();\r\n  }, [getLink]);\r\n\r\n  if (loading) return <Loader />;\r\n  console.log(link);\r\n  if (link) return <LinkCard link={link} />;\r\n  return null;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const CreatePage = () => {\r\n  const [link, setLink] = useState(\"\");\r\n  const { request } = useHttp();\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const pressHandle = async event => {\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        const data = await request(\r\n          \"/api/link/generate\",\r\n          \"POST\",\r\n          { from: link },\r\n          { Authorization: `Beared ${auth.token}` }\r\n        );\r\n        history.push(`/detail/${data.link._id}`);\r\n      } catch (e) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\">\r\n        <div className=\"input-field mt-4\">\r\n          <input\r\n            id=\"link\"\r\n            type=\"text\"\r\n            className=\"\"\r\n            name=\"link\"\r\n            onChange={e => setLink(e.target.value)}\r\n            onKeyPress={pressHandle}\r\n            value={link}\r\n          />\r\n          <label htmlFor=\"link\">Link</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { useMessage } from \"../hooks/message.hook\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const AuthPage = () => {\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n  const auth = useContext(AuthContext);\r\n  const { loading, error, request, clearError } = useHttp(); //исп. пользоват. хук\r\n  const message = useMessage(); //исп. пользоват. хук\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, clearError, message]);\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const changeHandle = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const registeryHandle = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/registery\", \"POST\", { ...form });\r\n      message(data.message);\r\n    } catch (e) {}\r\n  };\r\n\r\n  const loginHandle = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/login\", \"POST\", { ...form });\r\n      auth.login(data.token, data.userId);\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h2>Сократи Ссылку</h2>\r\n        <div className=\"card blue darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Авторизация</span>\r\n            <div>\r\n              <div className=\"input-field mt-4\">\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  className=\"yellow-inp\"\r\n                  name=\"email\"\r\n                  onChange={changeHandle}\r\n                  value={form.email}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n              </div>\r\n              <div className=\"input-field mt-4\">\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className=\"yellow-inp\"\r\n                  name=\"password\"\r\n                  onChange={changeHandle}\r\n                  value={form.password}\r\n                />\r\n                <label htmlFor=\"email\">Password</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              onClick={loginHandle}\r\n              disabled={loading}\r\n              className=\"btn yellow darken-4 mr-2\"\r\n            >\r\n              Войти\r\n            </button>\r\n            <button\r\n              onClick={registeryHandle}\r\n              disabled={loading}\r\n              className=\"btn grey lighten-1 black-text\"\r\n            >\r\n              Регистрация\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useMessage = () =>\r\n  useCallback(text => {\r\n    if (window.M && text) window.M.toast({ html: text });\r\n  }, []);\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const Navbar = () => {\r\n  const history = useHistory();\r\n  const auht = useContext(AuthContext);\r\n  const logoutHandle = e => {\r\n    e.preventDefault();\r\n    auht.logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-1 ph-2\">\r\n        <span className=\"brand-logo\">Сокращение ссылок</span>\r\n        <ul className=\"right\">\r\n          <li>\r\n            <NavLink to=\"/create\">Create</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/links\">Links</NavLink>\r\n          </li>\r\n          <li>\r\n            <a href=\"/\" onClick={logoutHandle}>\r\n              Exit\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"materialize-css\";\n\nimport { useRoutes } from \"./routes\";\nimport { useAuth } from \"./hooks/auth.hook\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Loader } from \"./components/Loader\";\n\nfunction App() {\n  const { login, logout, token, userId, ready } = useAuth();\n  const isAuthenticated = !!token;\n\n  const routes = useRoutes(isAuthenticated);\n\n  if (!ready) return <Loader />;\n\n  return (\n    <AuthContext.Provider\n      value={{ login, logout, token, userId, isAuthenticated }}\n    >\n      <BrowserRouter>\n        {isAuthenticated && <Navbar />}\n        <div className=\"container\">{routes}</div>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { useCallback, useState, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [ready, setReady] = useState(false);\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({ token: jwtToken, userId: id })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n    if (data && data.token) login(data.token, data.userId);\r\n    setReady(true);\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId, ready };\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LinksPage } from \"./pages/LinksPage\";\r\nimport { DetailPage } from \"./pages/DetailPage\";\r\nimport { CreatePage } from \"./pages/CreatePage\";\r\nimport { AuthPage } from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = isAuth => {\r\n  if (isAuth)\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/links\" exact>\r\n          <LinksPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/detail/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    );\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}